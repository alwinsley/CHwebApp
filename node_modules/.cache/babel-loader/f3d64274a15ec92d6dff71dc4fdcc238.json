{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/src/app/main/pages/songs/Song.js\";\nimport React, { Component } from 'react';\nimport { FusePageSimple, FuseAnimate } from '@fuse';\nimport { withRouter, Link } from 'react-router-dom';\nimport { withStyles, IconButton, Button, Card, CardContent, ListItemText, Paper, Input, AppBar, Icon, Typography, Divider, List, ListItem, Avatar, CardHeader } from '@material-ui/core';\nimport YouTube from 'react-youtube';\nimport * as jwt_decode from \"jwt-decode\";\nimport history from 'history.js'; //----------get user data----------\n\nvar token = localStorage.getItem('token');\nvar decoded = []; //----------Api config ---------\n\nvar api_host = \"http://localhost:8080\";\nvar headers = new Headers();\nheaders.append('Access-Control-Allow-Origin', 'http://localhost:8080');\nheaders.append('Access-Control-Allow-Credentials', 'true');\nheaders.append('Content-Type', 'application/json');\nheaders.append('authorization', 'Bearer ' + token);\nvar posts = [];\nvar comments = [];\n\nvar styles = function styles(theme) {\n  return {\n    layoutHeader: _defineProperty({\n      height: 320,\n      minHeight: 320\n    }, theme.breakpoints.down('md'), {\n      height: 240,\n      minHeight: 240\n    }),\n    textStyle: {\n      lineHeight: 3\n    },\n    btnStyle: {\n      float: 'right',\n      padding: 10,\n      margin: 5\n    }\n  };\n};\n\nvar ActivityPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ActivityPage, _Component);\n\n  function ActivityPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ActivityPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ActivityPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      artist: '',\n      media: '',\n      posts: [],\n      song_id: 0,\n      content: ''\n    };\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleChangePost = function (event) {\n      console.log(event.target.name, event.target.value);\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      console.log(_this.state);\n    };\n\n    _this.handleChangeComment = function (event) {\n      console.log(event.target.name, event.target.value);\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      console.log(_this.state);\n    };\n\n    return _this;\n  }\n\n  _createClass(ActivityPage, [{\n    key: \"readSongDetail\",\n    value: function readSongDetail(id) {\n      var _this2 = this;\n\n      this.setState({\n        name: '',\n        artist: '',\n        songkey: '',\n        tempo: '',\n        link: '',\n        posts: [],\n        content: ''\n      });\n      var name = '';\n      var artist = '';\n      var songkey = '';\n      var tempo = '';\n      var link = '';\n      posts = [];\n      comments = []; //-----read song detail-----\n\n      fetch(api_host + '/song/getByID/' + id, {\n        method: 'GET',\n        headers: headers\n      }).then(function (response) {\n        response.json().then(function (data) {\n          console.log(data);\n\n          if (data.length != 0) {\n            name = data[0].name;\n            artist = data[0].artist;\n            songkey = data[0].songkey;\n            tempo = data[0].tempo;\n            link = data[0].link;\n          }\n        });\n      }); //-----read posts/comments------    \n\n      fetch(api_host + '/song/getPostByID/' + id, {\n        method: 'GET',\n        headers: headers\n      }).then(function (response) {\n        response.json().then(function (data) {\n          console.log(data);\n\n          if (data.length != 0) {\n            data.data.forEach(function (post) {\n              if (data.comment.length != 0) {\n                data.comment.forEach(function (comment) {\n                  if (comment.pid == post.id) {\n                    console.log(comment.pid, post.id);\n                    comments.push({\n                      id: comment.id,\n                      user: {\n                        name: comment.username,\n                        avatar: comment.pic\n                      },\n                      time: comment.created_date,\n                      message: comment.content\n                    });\n                  }\n                });\n              }\n\n              posts.push({\n                id: post.id,\n                user: {\n                  name: post.username,\n                  avatar: post.pic\n                },\n                message: post.content,\n                time: post.created_date,\n                type: 'post',\n                // like: 5,\n                // share: 21,\n                // media: {\n                //   type: 'image',\n                //   preview: 'assets/images/profile/morain-lake.jpg'\n                // },\n                comments: comments\n              });\n              comments = [];\n            });\n\n            _this2.setState({\n              posts: posts,\n              name: name,\n              artist: artist,\n              songkey: songkey,\n              tempo: tempo,\n              link: link\n            });\n\n            console.log(_this2.state);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.setState({\n        song_id: id\n      });\n\n      if (token != null && token != \"\") {\n        decoded = jwt_decode(token);\n        this.readSongDetail(id);\n      } else {\n        history.push('/login');\n      }\n    }\n  }, {\n    key: \"createSongPost\",\n    //--------post part---------\n    value: function () {\n      var _createSongPost = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(this.state.content);\n                _context.next = 3;\n                return fetch(api_host + '/song/post', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    title: '',\n                    content: this.state.content,\n                    created_by: decoded.user.id,\n                    song_id: this.state.song_id\n                  }),\n                  headers: headers\n                }).then(function (response) {\n                  alert(\"Posted Successful\");\n                });\n\n              case 3:\n                this.readSongDetail(this.state.song_id);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createSongPost(_x) {\n        return _createSongPost.apply(this, arguments);\n      }\n\n      return createSongPost;\n    }()\n  }, {\n    key: \"createSongComment\",\n    value: function () {\n      var _createSongComment = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event, pid, type) {\n        var key, state;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                key = 'key' + pid;\n                state = this.state;\n                _context2.next = 4;\n                return fetch(api_host + '/comment', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    pid: pid,\n                    type: type,\n                    content: state[key],\n                    created_by: decoded.user.id\n                  }),\n                  headers: headers\n                }).then(function (response) {\n                  alert(\"Posted Successful\");\n                });\n\n              case 4:\n                this.readSongDetail(this.state.song_id);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createSongComment(_x2, _x3, _x4) {\n        return _createSongComment.apply(this, arguments);\n      }\n\n      return createSongComment;\n    }()\n  }, {\n    key: \"_onReady\",\n    value: function _onReady(event) {\n      // access to player in all event handlers via event.target\n      event.target.pauseVideo();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          name = _this$state.name,\n          artist = _this$state.artist,\n          songkey = _this$state.songkey,\n          tempo = _this$state.tempo,\n          link = _this$state.link,\n          posts = _this$state.posts,\n          song_id = _this$state.song_id,\n          content = _this$state.content;\n      var video_id = '';\n\n      if (link != '' && link != null) {\n        if (link.includes(\"watch\")) {\n          video_id = link.split('watch?v=')[1];\n        } else {\n          video_id = link.split('youtu.be/')[1];\n        }\n      }\n\n      var opts = {\n        // height: '390',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1\n        }\n      };\n      return React.createElement(FusePageSimple, {\n        classes: {\n          header: 'min-h-72 h-72 sm:h-136 sm:min-h-136',\n          toolbar: 'px-16 sm:px-24'\n        },\n        header: React.createElement(\"div\", {\n          className: \"flex flex-1 items-center justify-between p-8 sm:p-24\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flex flex-1 flex-col items-center justify-center md:flex-row md:items-center md:justify-start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(FuseAnimate, {\n          animation: \"transition.slideLeftIn\",\n          delay: 300,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          className: \"md:ml-24\",\n          variant: \"h4\",\n          color: \"inherit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, name, \"  \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, \"(\", artist, \") \"))))),\n        content: React.createElement(\"div\", {\n          className: \"p-16 sm:p-24 flex flex-col w-full max-w-512 mx-auto justify-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(Button, {\n          to: \"/songs\",\n          component: Link,\n          className: \"justify-start px-32 justify-center\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, \"Back\"), React.createElement(Typography, {\n          className: classes.textStyle,\n          variant: \"h6\",\n          color: \"inherit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, songkey, \": \", tempo, React.createElement(Button, {\n          className: classes.btnStyle,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          \"aria-label\": \"post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, \"edit\")), React.createElement(Button, {\n          onClick: function onClick() {\n            return _this3.props.history.push('/songs/' + song_id + '/media/list');\n          },\n          className: classes.btnStyle,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          \"aria-label\": \"post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, \"Media\"), React.createElement(Button, {\n          onClick: function onClick() {\n            return _this3.props.history.push('/songs/' + song_id + '/lyrics/');\n          },\n          className: classes.btnStyle,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          \"aria-label\": \"post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, \"Lyrics\")), React.createElement(YouTube, {\n          videoId: video_id,\n          opts: opts,\n          onReady: this._onReady,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }), React.createElement(Card, {\n          className: \"w-full overflow-hidden\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, React.createElement(Input, {\n          className: \"p-16 w-full\",\n          classes: {\n            root: 'text-14'\n          },\n          placeholder: \"Write something..\",\n          multiline: true,\n          rows: \"6\",\n          margin: \"none\",\n          disableUnderline: true,\n          onChange: this.handleChangePost,\n          value: content,\n          name: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }), React.createElement(AppBar, {\n          className: \"card-footer flex flex-row border-t-1\",\n          position: \"static\",\n          color: \"default\",\n          elevation: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"p-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          \"aria-label\": \"post\",\n          onClick: function onClick(e) {\n            return _this3.createSongPost(e, song_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, \"POST\"), React.createElement(Button, {\n          to: \"/songs\",\n          component: Link,\n          className: \"justify-start px-32\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, \"Back\")))), React.createElement(Divider, {\n          className: \"my-32\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }), posts && posts.map(function (post) {\n          return React.createElement(Card, {\n            className: \"mb-32 overflow-hidden\",\n            key: post.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            avatar: React.createElement(Avatar, {\n              \"aria-label\": \"Recipe\",\n              src: post.user.avatar,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 340\n              },\n              __self: this\n            }),\n            action: React.createElement(IconButton, {\n              \"aria-label\": \"more\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 342\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 343\n              },\n              __self: this\n            }, \"more_vert\")),\n            title: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 347\n              },\n              __self: this\n            }, React.createElement(Typography, {\n              className: \"inline font-medium mr-4\",\n              color: \"primary\",\n              paragraph: false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 348\n              },\n              __self: this\n            }, post.user.name), post.type === 'post' && 'posted on your timeline', post.type === 'something' && 'shared something with you', post.type === 'video' && 'shared a video with you', post.type === 'article' && 'shared an article with you'),\n            subheader: post.time,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339\n            },\n            __self: this\n          }), React.createElement(CardContent, {\n            className: \"py-0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360\n            },\n            __self: this\n          }, post.message && React.createElement(Typography, {\n            component: \"p\",\n            className: \"mb-16\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 362\n            },\n            __self: this\n          }, post.message)), React.createElement(AppBar, {\n            className: \"card-footer flex flex-column p-16\",\n            position: \"static\",\n            color: \"default\",\n            elevation: 0,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 387\n            },\n            __self: this\n          }, post.comments && post.comments.length > 0 && React.createElement(\"div\", {\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 389\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"flex items-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 390\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391\n            },\n            __self: this\n          }, post.comments.length, \" comments\"), React.createElement(Icon, {\n            className: \"text-16 ml-4\",\n            color: \"action\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392\n            },\n            __self: this\n          }, \"keyboard_arrow_down\")), React.createElement(List, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397\n            },\n            __self: this\n          }, post.comments.map(function (comment) {\n            return React.createElement(\"div\", {\n              key: comment.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 399\n              },\n              __self: this\n            }, React.createElement(ListItem, {\n              className: \"px-0\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 400\n              },\n              __self: this\n            }, React.createElement(Avatar, {\n              alt: comment.user.name,\n              src: comment.user.avatar,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 401\n              },\n              __self: this\n            }), React.createElement(ListItemText, {\n              primary: React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 404\n                },\n                __self: this\n              }, React.createElement(Typography, {\n                className: \"inline font-medium\",\n                color: \"default\",\n                paragraph: false,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 405\n                },\n                __self: this\n              }, comment.user.name), React.createElement(Typography, {\n                className: \"inline ml-4\",\n                variant: \"caption\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 408\n                },\n                __self: this\n              }, comment.time)),\n              secondary: comment.message,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 402\n              },\n              __self: this\n            })));\n          }))), React.createElement(\"div\", {\n            className: \"flex flex-auto\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428\n            },\n            __self: this\n          }, React.createElement(Avatar, {\n            src: \"assets/images/avatars/profile.jpg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 429\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"flex-1 pl-8\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 430\n            },\n            __self: this\n          }, React.createElement(Paper, {\n            elevation: 0,\n            className: \"w-full mb-16\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431\n            },\n            __self: this\n          }, React.createElement(Input, {\n            className: \"p-8 w-full border-1\",\n            classes: {\n              root: 'text-13'\n            },\n            placeholder: \"Add a comment..\",\n            multiline: true,\n            rows: \"6\",\n            margin: \"none\",\n            disableUnderline: true,\n            onChange: _this3.handleChangeComment,\n            name: 'key' + post.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 432\n            },\n            __self: this\n          })), React.createElement(Button, {\n            className: \"normal-case\",\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: function onClick(e) {\n              return _this3.createSongComment(e, post.id, post.type);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 444\n            },\n            __self: this\n          }, \"Post Comment\")))));\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ActivityPage;\n}(Component);\n\nexport default withRouter(withStyles(styles, {\n  withTheme: true\n})(ActivityPage));","map":{"version":3,"sources":["/Users/ALJohnny/Desktop/Git/ReactCHLayout/src/app/main/pages/songs/Song.js"],"names":["React","Component","FusePageSimple","FuseAnimate","withRouter","Link","withStyles","IconButton","Button","Card","CardContent","ListItemText","Paper","Input","AppBar","Icon","Typography","Divider","List","ListItem","Avatar","CardHeader","YouTube","jwt_decode","history","token","localStorage","getItem","decoded","api_host","headers","Headers","append","posts","comments","styles","theme","layoutHeader","height","minHeight","breakpoints","down","textStyle","lineHeight","btnStyle","float","padding","margin","ActivityPage","state","name","artist","media","song_id","content","handleChange","event","value","setState","handleChangePost","console","log","target","handleChangeComment","id","songkey","tempo","link","fetch","method","then","response","json","data","length","forEach","post","comment","pid","push","user","username","avatar","pic","time","created_date","message","type","props","match","params","readSongDetail","body","JSON","stringify","title","created_by","alert","key","pauseVideo","classes","video_id","includes","split","opts","width","playerVars","autoplay","header","toolbar","_onReady","root","e","createSongPost","map","createSongComment","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FusePageSimple, FuseAnimate } from '@fuse';\nimport { withRouter, Link } from 'react-router-dom';\nimport { withStyles, IconButton, Button, Card, CardContent, ListItemText, Paper, Input, AppBar, Icon, Typography, Divider, List, ListItem, Avatar, CardHeader,  } from '@material-ui/core';\n\nimport YouTube from 'react-youtube';\n\nimport * as jwt_decode from \"jwt-decode\";\nimport history from 'history.js';\n\n\n//----------get user data----------\nvar token = localStorage.getItem('token');\nvar decoded = [];\n\n//----------Api config ---------\nconst api_host = \"http://localhost:8080\";\n\nlet headers = new Headers();\n\nheaders.append('Access-Control-Allow-Origin', 'http://localhost:8080');\nheaders.append('Access-Control-Allow-Credentials', 'true');\nheaders.append('Content-Type', 'application/json');\nheaders.append('authorization', 'Bearer ' + token);\n\nvar posts = [];\nvar comments = [];\n\nconst styles = theme => ({\n  layoutHeader: {\n    height: 320,\n    minHeight: 320,\n    [theme.breakpoints.down('md')]: {\n      height: 240,\n      minHeight: 240\n    }\n  },\n  textStyle: {\n    lineHeight: 3\n  },\n  btnStyle: {\n    float: 'right',\n    padding: 10,\n    margin: 5\n  }\n});\n\nclass ActivityPage extends Component {\n  state = {\n    name: '',\n    artist: '',\n    media: '',\n    posts: [],\n    song_id: 0,\n    content: '',\n  };\n\n  readSongDetail(id){\n    this.setState({ \n      name: '',\n      artist: '',\n      songkey: '',\n      tempo: '',\n      link: '',\n      posts: [],\n      content: '',   \n    });\n\n    var name = '';\n    var artist = '';\n    var songkey = '';\n    var tempo = '';\n    var link = '';\n    posts = [];\n    comments = [];\n\n    //-----read song detail-----\n    fetch(api_host + '/song/getByID/'  + id , {\n      method: 'GET',\n      headers: headers,\n    })\n    .then(response => {\n      response.json().then(data => {\n        console.log(data);\n        if(data.length != 0){ \n          name= data[0].name;\n          artist = data[0].artist;\n          songkey = data[0].songkey;\n          tempo = data[0].tempo;\n          link = data[0].link;\n        }\n      });\n    });\n\n    //-----read posts/comments------    \n    fetch(api_host + '/song/getPostByID/'  + id, {\n      method: 'GET',\n      headers: headers,\n    })\n    .then(response => {\n      response.json().then(data => {\n        console.log(data);\n        if(data.length != 0){ \n          data.data.forEach(post => {\n            if(data.comment.length != 0){ \n              data.comment.forEach(comment => {                \n                if(comment.pid == post.id){\n                  console.log(comment.pid, post.id);\n                  comments.push(\n                    {\n                      id: comment.id,\n                      user: {\n                        name: comment.username,\n                        avatar: comment.pic,\n                      },\n                      time: comment.created_date,\n                      message: comment.content,                  \n                    }\n                  );\n                }\n              });              \n            }\n\n            posts.push({\n              id: post.id,\n              user: {\n                name: post.username,\n                avatar: post.pic,\n              },\n              message: post.content,\n              time: post.created_date,\n              type: 'post',\n              // like: 5,\n              // share: 21,\n              // media: {\n              //   type: 'image',\n              //   preview: 'assets/images/profile/morain-lake.jpg'\n              // },\n              comments: comments                \n            });\n            comments = [];\n          });\n          this.setState({\n            posts: posts,\n            name: name,\n            artist: artist,\n            songkey: songkey,\n            tempo: tempo,\n            link: link,\n          });\n          console.log(this.state);\n        }\n      });\n    });\n  }\n\n  componentDidMount(){\n    const { id } = this.props.match.params\n    this.setState({ song_id: id});\n    \n    if(token != null && token != \"\"){\n      decoded = jwt_decode(token);\n      this.readSongDetail(id);\n    }else{\n      history.push('/login');\n    }      \n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  //--------post part---------\n  async createSongPost(event){\n    console.log(this.state.content);\n    await fetch(api_host + '/song/post', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: '',\n        content: this.state.content,\n        created_by: decoded.user.id,\n        song_id: this.state.song_id\n      }),\n      headers: headers\n    })\n    .then(response => {\n      alert(\"Posted Successful\");\n    }); \n    \n    this.readSongDetail(this.state.song_id);\n  }\n\n  handleChangePost = event => {\n    console.log(event.target.name, event.target.value);\n    this.setState({\n      [event.target.name] : event.target.value\n    });\n    console.log(this.state);\n  };\n\n  //--------------comment part-----------\n  handleChangeComment = event => {\n    console.log(event.target.name, event.target.value);\n    this.setState({\n      [event.target.name] : event.target.value\n    });\n    console.log(this.state);\n  };\n\n  async createSongComment(event, pid, type){\n    var key = 'key' + pid;\n    const state = this.state;\n\n    await fetch(api_host + '/comment', {\n      method: 'POST',\n      body: JSON.stringify({\n        pid: pid,\n        type: type,\n        content: state[key],\n        created_by: decoded.user.id,\n      }),\n      headers: headers\n    })\n    .then(response => {\n      alert(\"Posted Successful\");\n    }); \n    \n    this.readSongDetail(this.state.song_id);\n  }\n\n  _onReady(event) {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { name, artist, songkey, tempo, link, posts, song_id, content } = this.state;\n    var video_id = '';\n    if(link != '' && link != null){\n      if(link.includes(\"watch\")){\n        video_id = link.split('watch?v=')[1];\n      }else{\n        video_id = link.split('youtu.be/')[1];\n      }\n    }\n\n    const opts = {\n      // height: '390',\n      width: '100%',\n      playerVars: { // https://developers.google.com/youtube/player_parameters\n        autoplay: 1\n      }\n    };\n    return (\n      <FusePageSimple\n        classes={{\n          header: 'min-h-72 h-72 sm:h-136 sm:min-h-136',\n          toolbar: 'px-16 sm:px-24'\n        }}\n        header={\n          <div className=\"flex flex-1 items-center justify-between p-8 sm:p-24\">\n            <div className=\"flex flex-1 flex-col items-center justify-center md:flex-row md:items-center md:justify-start\">\n              <FuseAnimate animation=\"transition.slideLeftIn\" delay={300}>\n                <Typography className=\"md:ml-24\" variant=\"h4\" color=\"inherit\">\n                  {name}  <span>({artist}) </span>\n                </Typography>\n              </FuseAnimate>\n            </div>\n          </div>\n        }\n        content={\n          <div className=\"p-16 sm:p-24 flex flex-col w-full max-w-512 mx-auto justify-center\">\n            <Button to={`/songs`} component={Link} className=\"justify-start px-32 justify-center\" color=\"secondary\">\n              Back\n            </Button>\n            <Typography className={classes.textStyle} variant=\"h6\" color=\"inherit\">\n              {songkey}: {tempo}\n              <Button className={classes.btnStyle} variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"post\">\n                <Icon>edit</Icon>\n              </Button>\n              <Button\n                onClick={() => this.props.history.push('/songs/' + song_id + '/media/list')}\n                className={classes.btnStyle}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                aria-label=\"post\"\n              >\n                Media\n              </Button>\n              <Button\n                onClick={() => this.props.history.push('/songs/' + song_id + '/lyrics/')}\n                className={classes.btnStyle}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                aria-label=\"post\"\n              >\n                Lyrics\n              </Button>\n            </Typography>\n            <YouTube\n              videoId={video_id}\n              opts={opts}\n              onReady={this._onReady}\n            />\n            {/* <img className=\"w-full border-b-1\" src={link} alt=\"article\" /> */}\n            <Card className=\"w-full overflow-hidden\">\n              <Input\n                className=\"p-16 w-full\"\n                classes={{ root: 'text-14' }}\n                placeholder=\"Write something..\"\n                multiline\n                rows=\"6\"\n                margin=\"none\"\n                disableUnderline\n                onChange= {this.handleChangePost}\n                value={content}\n                name = \"content\"\n              />\n              <AppBar className=\"card-footer flex flex-row border-t-1\" position=\"static\" color=\"default\" elevation={0}>\n                <div className=\"p-8\">\n                  <Button variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"post\" onClick={(e) => this.createSongPost(e, song_id)}>\n                    POST\n                  </Button>\n                  <Button to={`/songs`} component={Link} className=\"justify-start px-32\" color=\"secondary\">\n                    Back\n                  </Button>\n                </div>\n              </AppBar>\n            </Card>\n            \n            <Divider className=\"my-32\" />\n\n            {posts &&\n              posts.map(post => (\n                <Card className=\"mb-32 overflow-hidden\" key={post.id}>\n                  <CardHeader\n                    avatar={<Avatar aria-label=\"Recipe\" src={post.user.avatar} />}\n                    action={\n                      <IconButton aria-label=\"more\">\n                        <Icon>more_vert</Icon>\n                      </IconButton>\n                    }\n                    title={\n                      <span>\n                        <Typography className=\"inline font-medium mr-4\" color=\"primary\" paragraph={false}>\n                          {post.user.name}\n                        </Typography>\n                        {post.type === 'post' && 'posted on your timeline'}\n                        {post.type === 'something' && 'shared something with you'}\n                        {post.type === 'video' && 'shared a video with you'}\n                        {post.type === 'article' && 'shared an article with you'}\n                      </span>\n                    }\n                    subheader={post.time}\n                  />\n\n                  <CardContent className=\"py-0\">\n                    {post.message && (\n                      <Typography component=\"p\" className=\"mb-16\">\n                        {post.message}\n                      </Typography>\n                    )}\n\n                    {/* {post.media && <img src={post.media.preview} alt=\"post\" />} */}\n                  </CardContent>\n\n                  {/* <CardActions className=\"\" disableActionSpacing>\n                    <Button size=\"small\" aria-label=\"Add to favorites\">\n                      <Icon className=\"text-16 mr-8\" color=\"action\">\n                        favorite\n                      </Icon>\n                      <Typography className=\"normal-case\">Like</Typography>\n                      <Typography className=\"normal-case ml-4\">({post.like})</Typography>\n                    </Button>\n                    <Button aria-label=\"Share\">\n                      <Icon className=\"text-16 mr-8\" color=\"action\">\n                        share\n                      </Icon>\n                      <Typography className=\"normal-case\">Share</Typography>\n                      <Typography className=\"normal-case ml-4\">({post.share})</Typography>\n                    </Button>\n                  </CardActions> */}\n\n                  <AppBar className=\"card-footer flex flex-column p-16\" position=\"static\" color=\"default\" elevation={0}>\n                    {post.comments && post.comments.length > 0 && (\n                      <div className=\"\">\n                        <div className=\"flex items-center\">\n                          <Typography>{post.comments.length} comments</Typography>\n                          <Icon className=\"text-16 ml-4\" color=\"action\">\n                            keyboard_arrow_down\n                          </Icon>\n                        </div>\n\n                        <List>\n                          {post.comments.map(comment => (\n                            <div key={comment.id}>\n                              <ListItem className=\"px-0\">\n                                <Avatar alt={comment.user.name} src={comment.user.avatar} />\n                                <ListItemText\n                                  primary={\n                                    <div>\n                                      <Typography className=\"inline font-medium\" color=\"default\" paragraph={false}>\n                                        {comment.user.name}\n                                      </Typography>\n                                      <Typography className=\"inline ml-4\" variant=\"caption\">\n                                        {comment.time}\n                                      </Typography>\n                                    </div>\n                                  }\n                                  secondary={comment.message}\n                                />\n                              </ListItem>\n                              {/* <div className=\"flex items-center ml-56 mb-8\">\n                                <Link to=\"#\" className=\"mr-8\">\n                                  Reply\n                                </Link>\n                                <Icon className=\"text-14 cursor-pointer\">flag</Icon>\n                              </div> */}\n                            </div>\n                          ))}\n                        </List>\n                      </div>\n                    )}\n\n                    <div className=\"flex flex-auto\">\n                      <Avatar src=\"assets/images/avatars/profile.jpg\" />\n                      <div className=\"flex-1 pl-8\">\n                        <Paper elevation={0} className=\"w-full mb-16\">\n                          <Input\n                            className=\"p-8 w-full border-1\"\n                            classes={{ root: 'text-13' }}\n                            placeholder=\"Add a comment..\"\n                            multiline\n                            rows=\"6\"\n                            margin=\"none\"\n                            disableUnderline\n                            onChange={this.handleChangeComment}\n                            name={'key'+post.id}\n                          />\n                        </Paper>\n                        <Button className=\"normal-case\" variant=\"contained\" color=\"primary\" size=\"small\" onClick={(e) => this.createSongComment(e, post.id, post.type)}>\n                          Post Comment\n                        </Button>\n                      </div>\n                    </div>\n                  </AppBar>\n                </Card>\n              ))}\n          </div>\n        }\n      />\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles, { withTheme: true })(ActivityPage));\n"]},"metadata":{},"sourceType":"module"}