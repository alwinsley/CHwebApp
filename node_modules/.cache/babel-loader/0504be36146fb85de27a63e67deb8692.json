{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/src/app/main/pages/activity/tabs/TimelineTab.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\nimport * as Actions from '../store/actions';\nimport { AppBar, Avatar, Button, Card, CardActions, CardContent, CardHeader, Divider, Icon, IconButton, Input, List, ListItem, ListItemText, Paper, Typography } from '@material-ui/core';\nimport { FuseAnimateGroup } from '@fuse';\nimport { Link } from 'react-router-dom';\nimport * as jwt_decode from \"jwt-decode\";\nimport _ from '@lodash';\nimport history from 'history.js'; //----------get user data----------\n\nvar token = localStorage.getItem('token');\nvar decoded = []; //----------Api config ---------\n\nvar api_host = \"http://localhost:8080\";\nvar headers = new Headers();\nheaders.append('Access-Control-Allow-Origin', 'http://localhost:8080');\nheaders.append('Access-Control-Allow-Credentials', 'true');\nheaders.append('Content-Type', 'application/json');\nheaders.append('authorization', 'Bearer ' + token);\nvar posts = [];\nvar comments = [];\nvar team_id = \"\";\nvar initialState = {\n  activities: null,\n  posts: [],\n  content: ''\n};\n\nvar TimelineTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TimelineTab, _Component);\n\n  function TimelineTab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TimelineTab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimelineTab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = initialState;\n\n    _this.handleChange = function (event) {\n      _this.setState(_.set(_objectSpread({}, _this.state), event.target.name, event.target.value));\n    };\n\n    _this.handleChangeComment = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      console.log(_this.state);\n    };\n\n    return _this;\n  }\n\n  _createClass(TimelineTab, [{\n    key: \"readPostData\",\n    //----------read data----------\n    value: function readPostData(team_id) {\n      var _this2 = this;\n\n      this.setState({\n        activities: null,\n        posts: [],\n        content: ''\n      });\n      console.log(this.state);\n      posts = [];\n      comments = [];\n      fetch(api_host + '/team/getPostById/' + team_id, {\n        method: 'GET',\n        headers: headers\n      }).then(function (response) {\n        response.json().then(function (data) {\n          console.log(data);\n\n          if (data.data.length != 0) {\n            data.data.forEach(function (post) {\n              if (data.comment.length != 0) {\n                data.comment.forEach(function (comment) {\n                  // console.log(comment.pid, post.id);\n                  if (comment.pid == post.id) {\n                    comments.push({\n                      id: comment.id,\n                      user: {\n                        name: comment.username,\n                        avatar: comment.pic\n                      },\n                      time: comment.created_date,\n                      message: comment.content\n                    });\n                  }\n                });\n              }\n\n              posts.push({\n                id: post.id,\n                user: {\n                  name: post.username,\n                  avatar: post.pic\n                },\n                message: post.content,\n                time: post.created_date,\n                type: 'post',\n                // like: 5,\n                // share: 21,\n                // media: {\n                //   type: 'image',\n                //   preview: 'assets/images/profile/morain-lake.jpg'\n                // },\n                comments: comments\n              });\n              comments = [];\n            });\n\n            _this2.setState({\n              posts: posts\n            });\n\n            console.log(_this2.state);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (token != null && token != \"\") {\n        decoded = jwt_decode(token);\n      } else {\n        history.push('/login');\n      } // this.readPostData();\n\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      // console.log(\"nextProps:\", nextProps)\n      team_id = nextProps.team_id;\n      this.readPostData(team_id);\n    } //-----------------post part------------\n\n  }, {\n    key: \"createPost\",\n    value: function () {\n      var _createPost = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(this.state.content);\n                _context.next = 3;\n                return fetch(api_host + '/post', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    title: '',\n                    content: this.state.content,\n                    created_by: decoded.user.id\n                  }),\n                  headers: headers\n                }).then(function (response) {\n                  response.json().then(function (data) {\n                    _this3.props.showMessage({\n                      message: \"Posted Successful\",\n                      autoHideDuration: 6000,\n                      //ms\n                      anchorOrigin: {\n                        vertical: 'top',\n                        //top bottom\n                        horizontal: 'right' //left center right\n\n                      },\n                      variant: 'success' //success error info warning null\n\n                    });\n\n                    _this3.readPostData(team_id);\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createPost(_x) {\n        return _createPost.apply(this, arguments);\n      }\n\n      return createPost;\n    }()\n  }, {\n    key: \"createComment\",\n    value: function () {\n      var _createComment = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event, pid, type) {\n        var _this4 = this;\n\n        var key, state;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                key = 'key' + pid;\n                state = this.state;\n                console.log(state[key]);\n                _context2.next = 5;\n                return fetch(api_host + '/comment', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    pid: pid,\n                    type: type,\n                    content: state[key],\n                    created_by: decoded.user.id\n                  }),\n                  headers: headers\n                }).then(function (response) {\n                  response.json().then(function (data) {\n                    _this4.props.showMessage({\n                      message: \"Posted Successful\",\n                      autoHideDuration: 6000,\n                      //ms\n                      anchorOrigin: {\n                        vertical: 'top',\n                        //top bottom\n                        horizontal: 'right' //left center right\n\n                      },\n                      variant: 'success' //success error info warning null\n\n                    });\n\n                    _this4.readPostData(team_id);\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createComment(_x2, _x3, _x4) {\n        return _createComment.apply(this, arguments);\n      }\n\n      return createComment;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state = this.state,\n          posts = _this$state.posts,\n          content = _this$state.content;\n      console.log(this.state); // console.log('///////////////',this.props);\n\n      return React.createElement(\"div\", {\n        className: \"flex p-24 w-full max-w-2xl mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex flex-col flex-1 md:pr-32\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(FuseAnimateGroup, {\n        enter: {\n          animation: 'transition.slideUpBigIn'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"w-full overflow-hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"p-16 w-full\",\n        classes: {\n          root: 'text-14'\n        },\n        placeholder: \"Write something..\",\n        multiline: true,\n        rows: \"6\",\n        margin: \"none\",\n        disableUnderline: true,\n        onChange: this.handleChange,\n        value: content,\n        name: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(AppBar, {\n        className: \"card-footer flex flex-row border-t-1\",\n        position: \"static\",\n        color: \"default\",\n        elevation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        \"aria-label\": \"post\",\n        onClick: function onClick(e) {\n          return _this5.createPost(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"POST\")))), React.createElement(Divider, {\n        className: \"my-32\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })), posts && posts.map(function (post) {\n        return React.createElement(Card, {\n          className: \"mb-32 overflow-hidden\",\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          avatar: React.createElement(Avatar, {\n            \"aria-label\": \"Recipe\",\n            src: post.user.avatar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }),\n          action: React.createElement(IconButton, {\n            \"aria-label\": \"more\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273\n            },\n            __self: this\n          }, \"more_vert\")),\n          title: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            className: \"inline font-medium mr-4\",\n            color: \"primary\",\n            paragraph: false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }, post.user.name), post.type === 'post' && 'posted on your timeline', post.type === 'something' && 'shared something with you', post.type === 'video' && 'shared a video with you', post.type === 'article' && 'shared an article with you'),\n          subheader: post.time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }), React.createElement(CardContent, {\n          className: \"py-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, post.message && React.createElement(Typography, {\n          component: \"p\",\n          className: \"mb-16\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, post.message)), React.createElement(AppBar, {\n          className: \"card-footer flex flex-column p-16\",\n          position: \"static\",\n          color: \"default\",\n          elevation: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }, post.comments && post.comments.length > 0 && React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flex items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, post.comments.length, \" comments\"), React.createElement(Icon, {\n          className: \"text-16 ml-4\",\n          color: \"action\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, \"keyboard_arrow_down\")), React.createElement(List, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, post.comments.map(function (comment) {\n          return React.createElement(\"div\", {\n            key: comment.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329\n            },\n            __self: this\n          }, React.createElement(ListItem, {\n            className: \"px-0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330\n            },\n            __self: this\n          }, React.createElement(Avatar, {\n            alt: comment.user.name,\n            src: comment.user.avatar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331\n            },\n            __self: this\n          }), React.createElement(ListItemText, {\n            primary: React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 334\n              },\n              __self: this\n            }, React.createElement(Typography, {\n              className: \"inline font-medium\",\n              color: \"default\",\n              paragraph: false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 335\n              },\n              __self: this\n            }, comment.user.name), React.createElement(Typography, {\n              className: \"inline ml-4\",\n              variant: \"caption\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 338\n              },\n              __self: this\n            }, comment.time)),\n            secondary: comment.message,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332\n            },\n            __self: this\n          })));\n        }))), React.createElement(\"div\", {\n          className: \"flex flex-auto\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          src: \"assets/images/avatars/profile.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"flex-1 pl-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          elevation: 0,\n          className: \"w-full mb-16\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(Input, {\n          className: \"p-8 w-full border-1\",\n          classes: {\n            root: 'text-13'\n          },\n          placeholder: \"Add a comment..\",\n          multiline: true,\n          rows: \"6\",\n          margin: \"none\",\n          disableUnderline: true,\n          onChange: _this5.handleChangeComment,\n          name: 'key' + post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        })), React.createElement(Button, {\n          className: \"normal-case\",\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          onClick: function onClick(e) {\n            return _this5.createComment(e, post.id, post.type);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, \"Post Comment\")))));\n      }))));\n    }\n  }]);\n\n  return TimelineTab;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    showMessage: Actions.showMessage,\n    hideMessage: Actions.hideMessage\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var eCommerceApp = _ref.eCommerceApp;\n  return {// products: eCommerceApp.products.data,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TimelineTab));","map":{"version":3,"sources":["/Users/ALJohnny/Desktop/Git/ReactCHLayout/src/app/main/pages/activity/tabs/TimelineTab.js"],"names":["React","Component","bindActionCreators","withRouter","connect","Actions","AppBar","Avatar","Button","Card","CardActions","CardContent","CardHeader","Divider","Icon","IconButton","Input","List","ListItem","ListItemText","Paper","Typography","FuseAnimateGroup","Link","jwt_decode","_","history","token","localStorage","getItem","decoded","api_host","headers","Headers","append","posts","comments","team_id","initialState","activities","content","TimelineTab","state","handleChange","event","setState","set","target","name","value","handleChangeComment","console","log","fetch","method","then","response","json","data","length","forEach","post","comment","pid","id","push","user","username","avatar","pic","time","created_date","message","type","nextProps","readPostData","body","JSON","stringify","title","created_by","props","showMessage","autoHideDuration","anchorOrigin","vertical","horizontal","variant","key","animation","root","e","createPost","map","createComment","mapDispatchToProps","dispatch","hideMessage","mapStateToProps","eCommerceApp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\nimport * as Actions from '../store/actions';\n\nimport {\n  AppBar,\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  Icon,\n  IconButton,\n  Input,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography\n} from '@material-ui/core';\nimport { FuseAnimateGroup } from '@fuse';\nimport { Link } from 'react-router-dom';\nimport * as jwt_decode from \"jwt-decode\";\nimport _ from '@lodash';\nimport history from 'history.js';\n\n//----------get user data----------\nvar token = localStorage.getItem('token');\nvar decoded = [];\n\n//----------Api config ---------\nconst api_host = \"http://localhost:8080\";\n\nlet headers = new Headers();\n\nheaders.append('Access-Control-Allow-Origin', 'http://localhost:8080');\nheaders.append('Access-Control-Allow-Credentials', 'true');\nheaders.append('Content-Type', 'application/json');\nheaders.append('authorization', 'Bearer ' + token);\n\n\nvar posts = [];\nvar comments = [];\nvar team_id = \"\";\nconst initialState = {\n  activities: null,\n  posts: [],\n  content: '',\n};\n\nclass TimelineTab extends Component {\n  state = initialState;\n\n  //----------read data----------\n  readPostData(team_id) {\n    this.setState({\n      activities: null,\n      posts: [],\n      content: '',\n    });\n    console.log(this.state);\n\n    posts = [];\n    comments = [];\n\n    fetch(api_host + '/team/getPostById/' + team_id, {\n      method: 'GET',\n      headers: headers,\n    })\n      .then(response => {\n        response.json().then(data => {\n          console.log(data);\n          if (data.data.length != 0) {\n\n            data.data.forEach(post => {\n              if (data.comment.length != 0) {\n\n                data.comment.forEach(comment => {\n                  // console.log(comment.pid, post.id);\n                  if (comment.pid == post.id) {\n                    comments.push(\n                      {\n                        id: comment.id,\n                        user: {\n                          name: comment.username,\n                          avatar: comment.pic,\n                        },\n                        time: comment.created_date,\n                        message: comment.content,\n                      }\n                    );\n                  }\n                });\n              }\n\n              posts.push({\n                id: post.id,\n                user: {\n                  name: post.username,\n                  avatar: post.pic,\n                },\n                message: post.content,\n                time: post.created_date,\n                type: 'post',\n                // like: 5,\n                // share: 21,\n                // media: {\n                //   type: 'image',\n                //   preview: 'assets/images/profile/morain-lake.jpg'\n                // },\n                comments: comments\n              });\n\n              comments = [];\n            });\n            this.setState({ posts: posts });\n            console.log(this.state);\n          }\n        });\n      });\n  }\n  componentDidMount() {\n    if (token != null && token != \"\") {\n      decoded = jwt_decode(token);\n    } else {\n      history.push('/login');\n    }\n    // this.readPostData();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // console.log(\"nextProps:\", nextProps)\n    team_id = nextProps.team_id;\n    this.readPostData(team_id);\n  }\n\n  //-----------------post part------------\n  async createPost(event) {\n    console.log(this.state.content);\n    await fetch(api_host + '/post', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: '',\n        content: this.state.content,\n        created_by: decoded.user.id,\n      }),\n      headers: headers\n    })\n      .then(response => {\n        response.json().then(data => {\n          this.props.showMessage({\n            message: \"Posted Successful\",\n            autoHideDuration: 6000,//ms\n            anchorOrigin: {\n              vertical: 'top',//top bottom\n              horizontal: 'right'//left center right\n            },\n            variant: 'success'//success error info warning null\n          });\n          this.readPostData(team_id);\n        });\n      });\n  }\n\n  handleChange = event => {\n    this.setState(\n      _.set(\n        { ...this.state },\n        event.target.name,\n        event.target.value\n      )\n    );\n  };\n\n  //--------------------comment part--------------\n  handleChangeComment = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  };\n\n  async createComment(event, pid, type) {\n    var key = 'key' + pid;\n    const state = this.state;\n    console.log(state[key]);\n\n    await fetch(api_host + '/comment', {\n      method: 'POST',\n      body: JSON.stringify({\n        pid: pid,\n        type: type,\n        content: state[key],\n        created_by: decoded.user.id,\n      }),\n      headers: headers\n    })\n      .then(response => {\n        response.json().then(data => {\n          this.props.showMessage({\n            message: \"Posted Successful\",\n            autoHideDuration: 6000,//ms\n            anchorOrigin: {\n              vertical: 'top',//top bottom\n              horizontal: 'right'//left center right\n            },\n            variant: 'success'//success error info warning null\n          });\n          this.readPostData(team_id);\n        });\n      });\n\n  }\n\n\n  render() {\n    const { posts, content } = this.state;\n    console.log(this.state);\n\n    // console.log('///////////////',this.props);\n\n    return (\n      <div className=\"flex p-24 w-full max-w-2xl mx-auto\">\n        <div className=\"flex flex-col flex-1 md:pr-32\">\n          <FuseAnimateGroup\n            enter={{\n              animation: 'transition.slideUpBigIn'\n            }}\n          >\n            <div>\n              <Card className=\"w-full overflow-hidden\">\n                <Input\n                  className=\"p-16 w-full\"\n                  classes={{ root: 'text-14' }}\n                  placeholder=\"Write something..\"\n                  multiline\n                  rows=\"6\"\n                  margin=\"none\"\n                  disableUnderline\n                  onChange={this.handleChange}\n                  value={content}\n                  name=\"content\"\n                />\n                <AppBar\n                  className=\"card-footer flex flex-row border-t-1\"\n                  position=\"static\"\n                  color=\"default\"\n                  elevation={0}\n                >\n                  <div className=\"p-8\">\n                    <Button variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"post\" onClick={(e) => this.createPost(e)}>\n                      POST\n                    </Button>\n                  </div>\n                </AppBar>\n              </Card>\n\n              <Divider className=\"my-32\" />\n            </div>\n\n            {posts &&\n              posts.map(post => (\n                <Card className=\"mb-32 overflow-hidden\" key={post.id}>\n                  <CardHeader\n                    avatar={<Avatar aria-label=\"Recipe\" src={post.user.avatar} />}\n                    action={\n                      <IconButton aria-label=\"more\">\n                        <Icon>more_vert</Icon>\n                      </IconButton>\n                    }\n                    title={\n                      <span>\n                        <Typography className=\"inline font-medium mr-4\" color=\"primary\" paragraph={false}>\n                          {post.user.name}\n                        </Typography>\n                        {post.type === 'post' && 'posted on your timeline'}\n                        {post.type === 'something' && 'shared something with you'}\n                        {post.type === 'video' && 'shared a video with you'}\n                        {post.type === 'article' && 'shared an article with you'}\n                      </span>\n                    }\n                    subheader={post.time}\n                  />\n\n                  <CardContent className=\"py-0\">\n                    {post.message && (\n                      <Typography component=\"p\" className=\"mb-16\">\n                        {post.message}\n                      </Typography>\n                    )}\n\n                    {/* {post.media && <img src={post.media.preview} alt=\"post\" />} */}\n                  </CardContent>\n\n                  {/* <CardActions className=\"\" disableActionSpacing>\n                    <Button size=\"small\" aria-label=\"Add to favorites\">\n                      <Icon className=\"text-16 mr-8\" color=\"action\">\n                        favorite\n                      </Icon>\n                      <Typography className=\"normal-case\">Like</Typography>\n                      <Typography className=\"normal-case ml-4\">({post.like})</Typography>\n                    </Button>\n                    <Button aria-label=\"Share\">\n                      <Icon className=\"text-16 mr-8\" color=\"action\">\n                        share\n                      </Icon>\n                      <Typography className=\"normal-case\">Share</Typography>\n                      <Typography className=\"normal-case ml-4\">({post.share})</Typography>\n                    </Button>\n                  </CardActions> */}\n\n                  <AppBar className=\"card-footer flex flex-column p-16\" position=\"static\" color=\"default\" elevation={0}>\n                    {post.comments && post.comments.length > 0 && (\n                      <div className=\"\">\n                        <div className=\"flex items-center\">\n                          <Typography>{post.comments.length} comments</Typography>\n                          <Icon className=\"text-16 ml-4\" color=\"action\">\n                            keyboard_arrow_down\n                          </Icon>\n                        </div>\n\n                        <List>\n                          {post.comments.map(comment => (\n                            <div key={comment.id}>\n                              <ListItem className=\"px-0\">\n                                <Avatar alt={comment.user.name} src={comment.user.avatar} />\n                                <ListItemText\n                                  primary={\n                                    <div>\n                                      <Typography className=\"inline font-medium\" color=\"default\" paragraph={false}>\n                                        {comment.user.name}\n                                      </Typography>\n                                      <Typography className=\"inline ml-4\" variant=\"caption\">\n                                        {comment.time}\n                                      </Typography>\n                                    </div>\n                                  }\n                                  secondary={comment.message}\n                                />\n                              </ListItem>\n                              {/* <div className=\"flex items-center ml-56 mb-8\">\n                                <Link to=\"#\" className=\"mr-8\">\n                                  Reply\n                                </Link>\n                                <Icon className=\"text-14 cursor-pointer\">flag</Icon>\n                              </div> */}\n                            </div>\n                          ))}\n                        </List>\n                      </div>\n                    )}\n\n                    <div className=\"flex flex-auto\">\n                      <Avatar src=\"assets/images/avatars/profile.jpg\" />\n                      <div className=\"flex-1 pl-8\">\n                        <Paper elevation={0} className=\"w-full mb-16\">\n                          <Input\n                            className=\"p-8 w-full border-1\"\n                            classes={{ root: 'text-13' }}\n                            placeholder=\"Add a comment..\"\n                            multiline\n                            rows=\"6\"\n                            margin=\"none\"\n                            disableUnderline\n                            onChange={this.handleChangeComment}\n                            name={'key' + post.id}\n                          />\n                        </Paper>\n                        <Button className=\"normal-case\" variant=\"contained\" color=\"primary\" size=\"small\" onClick={(e) => this.createComment(e, post.id, post.type)}>\n                          Post Comment\n                        </Button>\n                      </div>\n                    </div>\n                  </AppBar>\n                </Card>\n              ))}\n          </FuseAnimateGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      showMessage: Actions.showMessage,\n      hideMessage: Actions.hideMessage,\n    },\n    dispatch\n  );\n}\n\nfunction mapStateToProps({ eCommerceApp }) {\n  return {\n    // products: eCommerceApp.products.data,\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TimelineTab)\n);\n"]},"metadata":{},"sourceType":"module"}