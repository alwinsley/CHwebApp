{"ast":null,"code":"import _objectSpread from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/src/app/main/pages/auth/login-2/tabs/JWTLoginTab.js\";\nimport Formsy from 'formsy-react';\nimport { TextFieldFormsy } from '@fuse';\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\nimport * as authActions from 'app/auth/store/actions';\nimport { Button, InputAdornment, Icon } from '@material-ui/core';\nimport history from 'history.js';\nvar api_host = \"http://localhost:8080\";\nvar headers = new Headers();\nheaders.append('Access-Control-Allow-Origin', 'http://localhost:8080');\nheaders.append('Access-Control-Allow-Credentials', 'true');\nheaders.append('Content-Type', 'application/json');\n\nvar JWTLoginTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JWTLoginTab, _Component);\n\n  function JWTLoginTab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, JWTLoginTab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(JWTLoginTab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      canSubmit: false\n    };\n    _this.form = React.createRef();\n\n    _this.disableButton = function () {\n      _this.setState({\n        canSubmit: false\n      });\n    };\n\n    _this.enableButton = function () {\n      _this.setState({\n        canSubmit: true\n      });\n    };\n\n    _this.onSubmit = function (model) {\n      console.log(model.username); // window.location.replace('/activity');\n      // this.props.submitLogin(model);\n\n      fetch(api_host + '/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: model.username,\n          password: model.password\n        }),\n        headers: headers\n      }).then(function (response) {\n        response.json().then(function (data) {\n          console.log(data);\n          localStorage.setItem('token', data);\n          history.push({\n            pathname: '/team'\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(JWTLoginTab, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.login.error && (this.props.login.error.email || this.props.login.error.password)) {\n        this.form.updateInputsWithError(_objectSpread({}, this.props.login.error));\n        this.props.login.error = null;\n        this.disableButton();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n      return React.createElement(\"div\", {\n        className: \"w-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Formsy, {\n        onValidSubmit: this.onSubmit,\n        onValid: this.enableButton,\n        onInvalid: this.disableButton,\n        ref: function ref(form) {\n          return _this2.form = form;\n        },\n        className: \"flex flex-col justify-center w-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(TextFieldFormsy, {\n        className: \"mb-16\",\n        type: \"text\",\n        name: \"username\",\n        label: \"Username/Email\",\n        validations: {\n          minLength: 4\n        },\n        validationErrors: {\n          minLength: 'Min character length is 4'\n        },\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            className: \"text-20\",\n            color: \"action\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, \"email\"))\n        },\n        variant: \"outlined\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(TextFieldFormsy, {\n        className: \"mb-16\",\n        type: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        validations: {\n          minLength: 4\n        },\n        validationErrors: {\n          minLength: 'Min character length is 4'\n        },\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            className: \"text-20\",\n            color: \"action\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"vpn_key\"))\n        },\n        variant: \"outlined\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"w-full mx-auto mt-16 normal-case\",\n        \"aria-label\": \"LOG IN\" // disabled={!canSubmit}\n        ,\n        value: \"legacy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return JWTLoginTab;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    submitLogin: authActions.submitLogin\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  return {\n    login: auth.login,\n    user: auth.user\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(JWTLoginTab));","map":{"version":3,"sources":["/Users/ALJohnny/Desktop/Git/ReactCHLayout/src/app/main/pages/auth/login-2/tabs/JWTLoginTab.js"],"names":["Formsy","TextFieldFormsy","React","Component","bindActionCreators","withRouter","connect","authActions","Button","InputAdornment","Icon","history","api_host","headers","Headers","append","JWTLoginTab","state","canSubmit","form","createRef","disableButton","setState","enableButton","onSubmit","model","console","log","username","fetch","method","body","JSON","stringify","password","then","response","json","data","localStorage","setItem","push","pathname","prevProps","prevState","props","login","error","email","updateInputsWithError","minLength","endAdornment","mapDispatchToProps","dispatch","submitLogin","mapStateToProps","auth","user"],"mappings":"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","sourcesContent":["import Formsy from 'formsy-react';\nimport { TextFieldFormsy } from '@fuse';\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\nimport * as authActions from 'app/auth/store/actions';\nimport { Button, InputAdornment, Icon } from '@material-ui/core';\nimport history from 'history.js';\n\n\nconst api_host = \"http://localhost:8080\";\n\nlet headers = new Headers();\n\nheaders.append('Access-Control-Allow-Origin', 'http://localhost:8080');\nheaders.append('Access-Control-Allow-Credentials', 'true');\nheaders.append('Content-Type', 'application/json');\n\nclass JWTLoginTab extends Component {\n  state = {\n    canSubmit: false,\n  };\n\n  form = React.createRef();\n\n  disableButton = () => {\n    this.setState({ canSubmit: false });\n  };\n\n  enableButton = () => {\n    this.setState({ canSubmit: true });\n  };\n\n  onSubmit = model => {\n    console.log(model.username);\n    // window.location.replace('/activity');\n    // this.props.submitLogin(model);\n\n    fetch(api_host + '/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: model.username,\n        password: model.password\n      }),\n      headers: headers\n    })\n    .then(response => {\n      response.json().then(data => {\n        console.log(data);\n        localStorage.setItem('token', data)\n\n        history.push({\n          pathname: '/team'\n        });\n\n      });\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.login.error && (this.props.login.error.email || this.props.login.error.password)) {\n      this.form.updateInputsWithError({\n        ...this.props.login.error\n      });\n\n      this.props.login.error = null;\n      this.disableButton();\n    }\n\n    return null;\n  }\n\n  render() {\n\n    const { username, password } = this.state;\n\n    return (\n      <div className=\"w-full\">\n        <Formsy\n          onValidSubmit={this.onSubmit}\n          onValid={this.enableButton}\n          onInvalid={this.disableButton}\n          ref={form => (this.form = form)}\n          className=\"flex flex-col justify-center w-full\"\n        >\n          <TextFieldFormsy\n            className=\"mb-16\"\n            type=\"text\"\n            name=\"username\"\n            label=\"Username/Email\"\n            validations={{\n              minLength: 4\n            }}\n            validationErrors={{\n              minLength: 'Min character length is 4'\n            }}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <Icon className=\"text-20\" color=\"action\">\n                    email\n                  </Icon>\n                </InputAdornment>\n              )\n            }}\n            variant=\"outlined\"\n            required\n          />\n\n          <TextFieldFormsy\n            className=\"mb-16\"\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            validations={{\n              minLength: 4\n            }}\n            validationErrors={{\n              minLength: 'Min character length is 4'\n            }}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <Icon className=\"text-20\" color=\"action\">\n                    vpn_key\n                  </Icon>\n                </InputAdornment>\n              )\n            }}\n            variant=\"outlined\"\n            required\n          />\n\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"w-full mx-auto mt-16 normal-case\"\n            aria-label=\"LOG IN\"\n            // disabled={!canSubmit}\n            value=\"legacy\"\n          >\n            Login\n          </Button>\n        </Formsy>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      submitLogin: authActions.submitLogin\n    },\n    dispatch\n  );\n}\n\nfunction mapStateToProps({ auth }) {\n  return {\n    login: auth.login,\n    user: auth.user\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(JWTLoginTab)\n);\n"]},"metadata":{},"sourceType":"module"}