{"ast":null,"code":"import _objectSpread from \"/Users/ALJohnny/Desktop/Git/ReactCHLayout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport history from 'history.js';\nimport { setDefaultSettings, setInitialSettings } from 'app/store/actions/fuse';\nimport _ from '@lodash';\nimport store from 'app/store';\nimport * as Actions from 'app/store/actions';\nimport firebase from 'firebase/app';\nimport firebaseService from 'app/services/firebaseService';\nimport auth0Service from 'app/services/auth0Service';\nimport jwtService from 'app/services/jwtService';\nexport var SET_USER_DATA = '[USER] SET DATA';\nexport var REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport var USER_LOGGED_OUT = '[USER] LOGGED OUT';\n/**\n * Set user data from Auth0 token data\n */\n\nexport function setUserDataAuth0(tokenData) {\n  var user = {\n    role: 'guest',\n    data: {\n      'displayName': '',\n      'photoURL': '',\n      // 'email'      : 'alescia.winsley@withinpixels.com',\n      shortcuts: ['calendar', 'mail', 'contacts', 'todo'] // role: 'admin',\n      // from: 'auth0',\n      // data: {\n      //     displayName: tokenData.username,\n      //     photoURL   : tokenData.picture,\n      //     email      : tokenData.email,\n      //     settings   : (tokenData.user_metadata && tokenData.user_metadata.settings) ? tokenData.user_metadata.settings : {},\n      //     shortcuts  : (tokenData.user_metadata && tokenData.user_metadata.shortcuts) ? tokenData.user_metadata.shortcuts : []\n      // }\n\n    }\n  };\n  return setUserData(user);\n}\n/**\n * Set user data from Firebase data\n */\n\nexport function setUserDataFirebase(user, authUser) {\n  if (user && user.data && user.data.settings && user.data.settings.theme && user.data.settings.layout && user.data.settings.layout.style) {\n    // Set user data but do not update\n    return setUserData(user);\n  } else {\n    // Create missing user settings\n    return createUserSettingsFirebase(authUser);\n  }\n}\n/**\n * Create User Settings with Firebase data\n */\n\nexport function createUserSettingsFirebase(authUser) {\n  return function (dispatch, getState) {\n    var guestUser = getState().auth.user;\n    var fuseDefaultSettings = getState().fuse.settings.defaults;\n    var currentUser = firebase.auth().currentUser;\n    /**\n     * Merge with current Settings\n     */\n\n    var user = _.merge({}, guestUser, {\n      uid: authUser.uid,\n      from: 'firebase',\n      role: \"admin\",\n      data: {\n        displayName: authUser.displayName,\n        email: authUser.email,\n        settings: _objectSpread({}, fuseDefaultSettings)\n      }\n    });\n\n    currentUser.updateProfile(user.data);\n    updateUserData(user);\n    return dispatch(setUserData(user));\n  };\n}\n/**\n * Set User Data\n */\n\nexport var setUserData = function setUserData(user) {\n  return {\n    type: SET_USER_DATA,\n    payload: user\n  };\n};\n/**\n * Update User Settings\n */\n\nexport function updateUserSettings(settings) {\n  return function (dispatch, getState) {\n    var oldUser = getState().auth.user;\n\n    var user = _.merge({}, oldUser, {\n      data: {\n        settings: settings\n      }\n    });\n\n    updateUserData(user);\n    return dispatch(setUserData(user));\n  };\n}\n/**\n * Update User Shortcuts\n */\n\nexport function updateUserShortcuts(shortcuts) {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    var newUser = _objectSpread({}, user, {\n      data: _objectSpread({}, user.data, {\n        shortcuts: shortcuts\n      })\n    });\n\n    updateUserData(newUser);\n    return dispatch(setUserData(newUser));\n  };\n}\n/**\n * Remove User Data\n */\n\nexport function removeUserData() {\n  return {\n    type: REMOVE_USER_DATA\n  };\n}\n/**\n * Logout\n */\n\nexport function logoutUser() {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    if (user.role === 'guest') {\n      return null;\n    }\n\n    history.push({\n      pathname: '/'\n    });\n\n    switch (user.from) {\n      case 'firebase':\n        {\n          firebaseService.signOut();\n          break;\n        }\n\n      case 'auth0':\n        {\n          auth0Service.logout();\n          break;\n        }\n\n      default:\n        {\n          jwtService.logout();\n        }\n    }\n\n    dispatch(setInitialSettings());\n    dispatch({\n      type: USER_LOGGED_OUT\n    });\n  };\n}\n/**\n * Update User Data\n */\n\nfunction updateUserData(user) {\n  if (user.role === 'guest') {\n    return;\n  }\n\n  switch (user.from) {\n    case 'firebase':\n      {\n        firebaseService.updateUserData(user).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: \"User data saved to firebase\"\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n\n    case 'auth0':\n      {\n        auth0Service.updateUserData({\n          settings: user.data.settings,\n          shortcuts: user.data.shortcuts\n        }).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: \"User data saved to auth0\"\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n\n    default:\n      {\n        jwtService.updateUserData(user).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: \"User data saved with api\"\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/ALJohnny/Desktop/Git/ReactCHLayout/src/app/auth/store/actions/user.actions.js"],"names":["history","setDefaultSettings","setInitialSettings","_","store","Actions","firebase","firebaseService","auth0Service","jwtService","SET_USER_DATA","REMOVE_USER_DATA","USER_LOGGED_OUT","setUserDataAuth0","tokenData","user","role","data","shortcuts","setUserData","setUserDataFirebase","authUser","settings","theme","layout","style","createUserSettingsFirebase","dispatch","getState","guestUser","auth","fuseDefaultSettings","fuse","defaults","currentUser","merge","uid","from","displayName","email","updateProfile","updateUserData","type","payload","updateUserSettings","oldUser","updateUserShortcuts","newUser","removeUserData","logoutUser","push","pathname","signOut","logout","then","showMessage","message","catch","error"],"mappings":"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","sourcesContent":["import history from 'history.js';\nimport {setDefaultSettings, setInitialSettings} from 'app/store/actions/fuse';\nimport _ from '@lodash';\nimport store from 'app/store';\nimport * as Actions from 'app/store/actions';\nimport firebase from 'firebase/app';\nimport firebaseService from 'app/services/firebaseService';\nimport auth0Service from 'app/services/auth0Service';\nimport jwtService from 'app/services/jwtService';\n\nexport const SET_USER_DATA = '[USER] SET DATA';\nexport const REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport const USER_LOGGED_OUT = '[USER] LOGGED OUT';\n\n\n/**\n * Set user data from Auth0 token data\n */\nexport function setUserDataAuth0(tokenData)\n{\n    const user = {\n        role: 'guest',\n        data: {\n            'displayName': '',\n            'photoURL'   : '',\n            // 'email'      : 'alescia.winsley@withinpixels.com',\n            shortcuts    : [\n                'calendar',\n                'mail',\n                'contacts',\n                'todo'\n            ]\n        }\n        // role: 'admin',\n        // from: 'auth0',\n        // data: {\n        //     displayName: tokenData.username,\n        //     photoURL   : tokenData.picture,\n        //     email      : tokenData.email,\n        //     settings   : (tokenData.user_metadata && tokenData.user_metadata.settings) ? tokenData.user_metadata.settings : {},\n        //     shortcuts  : (tokenData.user_metadata && tokenData.user_metadata.shortcuts) ? tokenData.user_metadata.shortcuts : []\n        // }\n    };\n\n    return setUserData(user);\n}\n\n/**\n * Set user data from Firebase data\n */\nexport function setUserDataFirebase(user, authUser)\n{\n    if ( user && user.data &&\n        user.data.settings &&\n        user.data.settings.theme &&\n        user.data.settings.layout &&\n        user.data.settings.layout.style )\n    {\n        // Set user data but do not update\n        return setUserData(user);\n    }\n    else\n    {\n        // Create missing user settings\n        return createUserSettingsFirebase(authUser);\n    }\n}\n\n/**\n * Create User Settings with Firebase data\n */\nexport function createUserSettingsFirebase(authUser)\n{\n    return (dispatch, getState) => {\n        const guestUser = getState().auth.user;\n        const fuseDefaultSettings = getState().fuse.settings.defaults;\n        const currentUser = firebase.auth().currentUser;\n\n        /**\n         * Merge with current Settings\n         */\n        const user = _.merge({}, guestUser,\n            {\n                uid : authUser.uid,\n                from: 'firebase',\n                role: \"admin\",\n                data: {\n                    displayName: authUser.displayName,\n                    email      : authUser.email,\n                    settings   : {...fuseDefaultSettings}\n                }\n            }\n        );\n        currentUser.updateProfile(user.data);\n\n        updateUserData(user);\n        return dispatch(setUserData(user));\n    }\n}\n\n/**\n * Set User Data\n */\n\nexport const setUserData = (user) => ({\n    type: SET_USER_DATA,\n    payload: user\n})\n\n\n/**\n * Update User Settings\n */\nexport function updateUserSettings(settings)\n{\n    return (dispatch, getState) => {\n        const oldUser = getState().auth.user;\n        const user = _.merge({}, oldUser, {data: {settings}});\n\n        updateUserData(user);\n\n        return dispatch(setUserData(user));\n    }\n}\n\n/**\n * Update User Shortcuts\n */\nexport function updateUserShortcuts(shortcuts)\n{\n    return (dispatch, getState) => {\n        const user = getState().auth.user;\n        const newUser = {\n            ...user,\n            data: {\n                ...user.data,\n                shortcuts\n            }\n        };\n\n        updateUserData(newUser);\n\n        return dispatch(setUserData(newUser));\n    }\n}\n\n/**\n * Remove User Data\n */\nexport function removeUserData()\n{\n    return {\n        type: REMOVE_USER_DATA\n    }\n}\n\n/**\n * Logout\n */\nexport function logoutUser()\n{\n\n    return (dispatch, getState) => {\n\n        const user = getState().auth.user;\n\n        if ( user.role === 'guest' )\n        {\n            return null;\n        }\n\n        history.push({\n            pathname: '/'\n        });\n\n        switch ( user.from )\n        {\n            case 'firebase':\n            {\n                firebaseService.signOut();\n                break;\n            }\n            case 'auth0':\n            {\n                auth0Service.logout();\n                break;\n            }\n            default:\n            {\n                jwtService.logout();\n            }\n        }\n\n        dispatch(setInitialSettings());\n\n        dispatch({\n            type: USER_LOGGED_OUT\n        })\n    }\n}\n\n/**\n * Update User Data\n */\nfunction updateUserData(user)\n{\n    if ( user.role === 'guest' )\n    {\n        return;\n    }\n\n    switch ( user.from )\n    {\n        case 'firebase':\n        {\n            firebaseService.updateUserData(user)\n                .then(() => {\n                    store.dispatch(Actions.showMessage({message: \"User data saved to firebase\"}));\n                })\n                .catch(error => {\n                    store.dispatch(Actions.showMessage({message: error.message}));\n                });\n            break;\n        }\n        case 'auth0':\n        {\n            auth0Service.updateUserData({\n                settings : user.data.settings,\n                shortcuts: user.data.shortcuts\n            })\n                .then(() => {\n                    store.dispatch(Actions.showMessage({message: \"User data saved to auth0\"}));\n                })\n                .catch(error => {\n                    store.dispatch(Actions.showMessage({message: error.message}));\n                });\n            break;\n        }\n        default:\n        {\n            jwtService.updateUserData(user)\n                .then(() => {\n                    store.dispatch(Actions.showMessage({message: \"User data saved with api\"}));\n                })\n                .catch(error => {\n                    store.dispatch(Actions.showMessage({message: error.message}));\n                });\n            break;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}